session_testing_table_updated[is.na(session_testing_table_updated)]<-"NA"
pulse_remove %>% unique() %>% nrow()
pulse_remove = target_day_beleto_order %>%
inner_join(session_testing_table,by=c("order_id"="ti_orderid","product_id"="purchase_product_id")) %>%
select(order_id,product_id) %>%
mutate(order_state='REMOVED') %>%
unique()
session_testing_table_updated = session_testing_table %>% left_join(pulse_remove,by=c("ti_orderid"="order_id","purchase_product_id"="product_id"))
session_testing_table_updated[is.na(session_testing_table_updated)]<-"NA"
session_testing_table_updated = session_testing_table_updated %>%
filter(order_state!='REMOVED') %>%
select(-c(order_state))
nrow(session_testing_table)-nrow(session_testing_table_updated)
temp = pulse_remove %>% transmute(ti_orderid=order_id,purchase_product_id=product_id)
session_testing_table_updated = session_testing_table %>% left_join(pulse_remove,by=c("ti_orderid"="order_id","purchase_product_id"="product_id"))
session_testing_table_updated[is.na(session_testing_table_updated)]<-"NA"
setdiff(session_testing_table_updated %>% select(ti_orderid,purchase_product_id),temp)
setdiff(session_testing_table_updated %>% filter(order_state=="REMOVED") %>% select(ti_orderid,purchase_product_id),temp)
session_testing_table_updated = session_testing_table_updated %>%
filter(order_state!='REMOVED') %>%
select(-c(order_state))
session_testing_table_updated = session_testing_table %>% left_join(pulse_remove,by=c("ti_orderid"="order_id","purchase_product_id"="product_id"))
session_testing_table_updated[is.na(session_testing_table_updated)]<-"NA"
session_testing_table_updated = session_testing_table_updated %>%
filter(order_state!='REMOVED') %>%
select(-c(order_state,ti_orderid))
session_testing_object
saveRDS(object = session_testing_table_updated,file="~/Desktop/session_testing.Robj")
temp1=read.csv(file="~/Desktop/production_100005_recommendationSuccess.csv",quote = "")
View(temp1)
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
library(rJava)
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("RMongo")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
install.packages("rJava")
library(devtools)
install.packages("devtools")
install.packages("curl")
install.packages("libcurl")
install.packages("curl")
install.packages("curl")
library(curl)
install.packages("devtools")
library(devtools)
install_github(repo = "mongosoup/rmongodb")
library(rmongodb)
library(rmongodb)
mongo <- mongo.create(host="172.31.24.104",name = "beveel_mongoDB",db="beveeladmin")
mongo <- mongo.create(host="172.31.24.104",name = "beveel_mongoDB",db="beveeladmin",timeout = 100L)
mongo <- mongo.create(host="172.31.24.104:27017",name = "beveel_mongoDB",db="beveeladmin",timeout = 100L)
?mongo.create
mongo <- mongo.create(host="172.31.24.104:27017",name = "beveel_mongoDB",db="beveeladmin",timeout = 100L)
mongo <- mongo.create("172.31.24.104:27017",,name = "beveel_mongoDB",db="beveeladmin",timeout = 100L)
mongo <- mongo.create("172.31.24.104:27017",username = "",db="beveeladmin",timeout = 100L)
mongo.is.connected(mongo)
mongo.get.databases(mongo)
mongo.get.databases(mongo,beveeladmin)
mongo.get.databases(mongo,"beveeladmin")
mongo.get.database.collections(mongo,"beveeladmin")
tmp=mongo.find.one(mongo,"beveeladmin")
tmp
tmp=mongo.find.one(mongo,"beveeladmin.systemParms")
tmp
class(tmp)
names(tmp)
tmp=mongo.bson.to.list(tmp)
class(tmp)
names(tmp)
temp
tmp
tmp=mongo.find.one(mongo,"beveeladmin.sysemParms")
tmp=as.data.frame(mongo.bson.to.list(tmp))
tmp=mongo.find.one(mongo,"beveeladmin.sysemParms")
tmp=mongo.bson.to.list(tmp)
tmp=mongo.find.one(mongo,"beveeladmin.sysemParms")
class(tmp)
library(devtools)
library(rmongodb)
mongo <- mongo.create("172.31.24.104:27017",username = "",db="beveeladmin",timeout = 100L)
mongo.is.connected(mongo)
mongo.get.database.collections(mongo,"beveeladmin")
tmp=mongo.find.one(mongo,"beveeladmin.sysemParms")
tmp
tmp=mongo.bson.to.list(tmp)
tmp=mongo.find.one(mongo,"beveeladmin.sysemParms")
tmp
mongo.is.connected(mongo)
tmp=mongo.find.one(mongo,"beveeladmin.sysemParms")
mongo.get.database.collections(mongo,"beveeladmin")
tmp=mongo.find.one(mongo,"beveeladmin.job")
tmp
tmp=mongo.find.one(mongo,"beveeladmin.systemParms")
tmp
tmp=mongo.bson.to.list(tmp)
temp_1=as.data.frame(tmp)
class(tmp)
tmp$param_name
unlist(tmp)
matrix(unlist(tmp),nrow = 2)
matrix(unlist(tmp),nrow = 5)
matrix(unlist(tmp),nrow = 5,byrow = T)
matrix(unlist(tmp),nrow = 5,byrow = F)
data.frame(matrix(unlist(tmp),nrow = 5,byrow = F))
data.frame(matrix(unlist(tmp),nrow = 5,byrow = T))
data.frame(matrix(unlist(tmp),nrow = 2,byrow = T))
data.frame(matrix(unlist(tmp),nrow = 4,byrow = T))
data.frame(matrix(unlist(tmp),nrow = 3,byrow = T))
data.frame(matrix(unlist(tmp),nrow = 2,byrow = T))
data.frame(matrix(unlist(tmp),nrow = 5,byrow = T))
tmp=mongo.find.one(mongo,"beveeladmin.systemParms")
tmp=mongo.find.all(mongo,"beveeladmin.systemParms")
tmp
unlist(tmp)
temp1=unlist(tmp);temp1
temp1[1]
class(temp1)
temp1[2]
class(tmp)
as.data.frame(matrix(unlist(temp1), nrow=length(unlist(temp1[1]))))
temp1[1]
as.data.frame(matrix(unlist(temp1), nrow=5
)
)
?matrix
as.data.frame(matrix(unlist(temp1), nrow=3))
as.data.frame(matrix(unlist(temp1), nrow=3,ncol = 5))
as.data.frame(matrix(unlist(temp1), nrow=3,ncol = 5,byrow = T))
as.data.frame(matrix(unlist(temp1), nrow=3,byrow = T))
as.data.frame(matrix(unlist(temp1), nrow=3,byrow = T))
names(tmp)
names(tmp[1])
tmp$1
tmp['1']
tmp[value]
tmp['value'']
fdas
}
C
)
qwui
quit()
}
daflsj
asdj-01294
13578
sadgf
adsas()
library(devtools)
library(rmongodb)
mongo <- mongo.create("172.31.24.104:27017",username = "",db="beveeladmin",timeout = 100L)
mongo.is.connected(mongo)
mongo.get.database.collections(mongo,"beveeladmin")
tmp=mongo.find.all(mongo,"beveeladmin.systemParms")
temp1=unlist(tmp)
as.data.frame(matrix(unlist(temp1), nrow=3,byrow = T))
?as.data.frame()
as.data.frame(matrix(unlist(temp1), nrow=3,byrow = T),col.names=c("object_id","param_name","customer","rule_id","value"))
as.data.frame(matrix(unlist(temp1), nrow=3,byrow = T),col.names("object_id","param_name","customer","rule_id","value"))
as.data.frame(matrix(unlist(temp1), nrow=3,byrow = T),col.names=c("object_id","param_name","customer","rule_id","value"))
as.data.frame(matrix(unlist(temp1), nrow=3,byrow = T),stringsAsFactors = FALSE)
system_param_table = as.data.frame(matrix(unlist(temp1), nrow=3,byrow = T),stringsAsFactors = FALSE)
colnames(system_param_table)=c("object_id","param_name","customer","rule_id","value")
source('~/Exploration/eoe_mongoDB_connection.R', echo=TRUE)
system_param_table$value[1]
system_param_table$value = as.numeric(system_param_table$value)
summary(system_param_table)
knitr::opts_chunk$set(echo = TRUE)
dataSourceSwitch='production'#'delta' only uses new data, 'base' only uses old data, 'both' use new and old data to generate recommendations
source_and_result_switch='production';evalSwitch='eval';parmFile='Netshoes.txt';type='purchase'
homeDirectory = Sys.getenv("HOME"); homeDirectory
currentDir = paste(homeDirectory, "/gitRepos/CF_and_other_analyses/R/", sep=""); currentDir
setwd(currentDir); getwd()
## Variables and functions
source('eoe_common_setup.R')
knitr::opts_chunk$set(echo = TRUE)
dataSourceSwitch='production'#'delta' only uses new data, 'base' only uses old data, 'both' use new and old data to generate recommendations
source_and_result_switch='production';evalSwitch='eval';parmFile='Netshoes.txt';type='purchase'
homeDirectory = Sys.getenv("HOME"); homeDirectory
currentDir = paste(homeDirectory, "/gitRepos/CF_and_other_analyses/R/", sep=""); currentDir
setwd(currentDir); getwd()
## Variables and functions
source('eoe_common_setup.R')
knitr::opts_chunk$set(echo = TRUE)
dataSourceSwitch='production'#'delta' only uses new data, 'base' only uses old data, 'both' use new and old data to generate recommendations
source_and_result_switch='production';evalSwitch='eval';parmFile='Netshoes.txt';type='purchase'
homeDirectory = Sys.getenv("HOME"); homeDirectory
currentDir = paste(homeDirectory, "/gitRepos/CF_and_other_analyses/R/", sep=""); currentDir
setwd(currentDir); getwd()
## Variables and functions
source('eoe_common_setup.R')
system_param_table
library(devtools)
library(rmongodb)
mongo <- mongo.create("172.31.24.104:27017",username = "",db="beveeladmin",timeout = 100L)
mongo.is.connected(mongo)
mongo.get.database.collections(mongo,"beveeladmin")
tmp=mongo.find.all(mongo,"beveeladmin.systemParms")
tmp=unlist(tmp)
system_param_table = as.data.frame(matrix(unlist(tmp), nrow=3,byrow = T),stringsAsFactors = FALSE)
View(system_param_table)
colnames(system_param_table)=c("object_id","param_name","customer","rule_id","value")
system_param_table$value = as.numeric(system_param_table$value)
summary(system_param_table)
param_name="targetTrainingDays"
system_param_table %>% filter(param_name=param_name,customer=customer,rule_id=rule_id)
system_param_table %>% filter(param_name==param_name,customer==customer,rule_id==rule_id)
ruleId
param_name="targetTrainingDays"
rule_id="9999"
customer="Netshoes"
system_param_table %>% filter(param_name==param_name,customer==customer,rule_id==rule_id)
system_param_table %>% filter(param_name=param_name,customer=customer,rule_id=rule_id)
system_param_table %>% filter(rule_id="9999")
system_param_table %>% filter(rule_id=="9999")
system_param_table %>% filter(param_name==param_name,customer==customer,rule_id==rule_id)
rule_id
param="targetTrainingDays"
rule="9999"
customer_name="Netshoes"
system_param_table %>% filter(param_name==param,customer==customer_name,rule_id==rule)
system_param_table %>% filter(customer==customer_name,rule_id==rule) %>% select(param)
system_param_table %>% filter(param_name==param,customer==customer_name,rule_id==rule) %>% select(value)
class(target_value)
target_value = system_param_table %>%
filter(param_name==param,customer==customer_name,rule_id==rule) %>%
select(value)
class(target_value)
View(target_value)
class(target_value$value)
target_value[1]
target_value[1,1]
target_row = system_param_table %>%
filter(param_name==param,customer==customer_name,rule_id==rule) %>%
select(value)
target_value = target_row$value[1]
read_mongoDB_param=function(param,customer_name,rule){
#connect with mongoDB
library(devtools)
library(rmongodb)
mongo <- mongo.create("172.31.24.104:27017",username = "",db="beveeladmin",timeout = 100L)
mongo.is.connected(mongo)
mongo.get.database.collections(mongo,"beveeladmin")
#read the collection
tmp=mongo.find.all(mongo,"beveeladmin.systemParms")
tmp=unlist(tmp)
system_param_table = as.data.frame(matrix(unlist(tmp), nrow=3,byrow = T),stringsAsFactors = FALSE)
colnames(system_param_table)=c("object_id","param_name","customer","rule_id","value")
system_param_table$value = as.numeric(system_param_table$value)
summary(system_param_table)
#query the value
target_row = system_param_table %>%
filter(param_name==param,customer==customer_name,rule_id==rule) %>%
select(value)
target_value = target_row$value[1]
if(!is.na(target_value)){
return(target_value)
}else{
print("The value you are looking for does not exist")
}
}
value = read_mongoDB_param("XXX","Netshoes","9999")
read_mongoDB_param=function(param,customer_name,rule){
#connect with mongoDB
library(devtools)
library(rmongodb)
mongo <- mongo.create("172.31.24.104:27017",username = "",db="beveeladmin",timeout = 100L)
mongo.is.connected(mongo)
mongo.get.database.collections(mongo,"beveeladmin")
#read the collection
tmp=mongo.find.all(mongo,"beveeladmin.systemParms")
tmp=unlist(tmp)
system_param_table = as.data.frame(matrix(unlist(tmp), nrow=3,byrow = T),stringsAsFactors = FALSE)
colnames(system_param_table)=c("object_id","param_name","customer","rule_id","value")
system_param_table$value = as.numeric(system_param_table$value)
summary(system_param_table)
#query the value
target_row = system_param_table %>%
filter(param_name==param,customer==customer_name,rule_id==rule) %>%
select(value)
target_value = target_row$value[1]
if(!is.na(target_value)){
return(target_value)
}else{
stop("The value you are looking for does not exist")
}
}
value = read_mongoDB_param("XXX","Netshoes","9999")
read_mongoDB_param=function(param,customer_name,rule){
#connect with mongoDB
library(devtools)
library(rmongodb)
mongo <- mongo.create("172.31.24.104:27017",username = "",db="beveeladmin",timeout = 100L)
mongo.is.connected(mongo)
mongo.get.database.collections(mongo,"beveeladmin")
#read the collection
tmp=mongo.find.all(mongo,"beveeladmin.systemParms")
mongo.disconnect(mongo)
tmp=unlist(tmp)
system_param_table = as.data.frame(matrix(unlist(tmp), nrow=3,byrow = T),stringsAsFactors = FALSE)
colnames(system_param_table)=c("object_id","param_name","customer","rule_id","value")
system_param_table$value = as.numeric(system_param_table$value)
summary(system_param_table)
#query the value
target_row = system_param_table %>%
filter(param_name==param,customer==customer_name,rule_id==rule) %>%
select(value)
target_value = target_row$value[1]
if(!is.na(target_value)){
return(target_value)
}else{
stop("The value you are looking for does not exist!")
}
}
value = read_mongoDB_param("XXX","Netshoes","9999")
value = read_mongoDB_param("targetTrainingDays","Netshoes","9999")
?mongo.update()
mongo
new_value=200
library(devtools)
library(rmongodb)
mongo <- mongo.create("172.31.24.104:27017",username = "",db="beveeladmin",timeout = 100L)
mongo.update(mongo,"beveeladmin",
list(param_name=param,customer=customer_name,rule_id=rule),
list(param_name=param,customer=customer_name,rule_id=rule,value=new_value)
)
mongo.update(mongo,"beveeladmin.systemParms",
list(param_name=param,customer=customer_name,rule_id=rule),
list(param_name=param,customer=customer_name,rule_id=rule,value=new_value)
)
write_mongoDB_param=function(param,customer_name,rule,new_value){
#connect with mongoDB
library(devtools)
library(rmongodb)
mongo <- mongo.create("172.31.24.104:27017",username = "",db="beveeladmin",timeout = 100L)
#update the value in mongoDB
mongo.update(mongo,"beveeladmin.systemParms",
list(param_name=param,customer=customer_name,rule_id=rule),
list(param_name=param,customer=customer_name,rule_id=rule,value=new_value)
)
mongo.disconnect(mongo)
}
write_mongoDB_param("targetTrainingDays","Netshoes","9999",9000)
library(devtools)
library(rmongodb)
mongo <- mongo.create("172.31.24.104:27017",username = "",db="beveeladmin",timeout = 100L)
mongo.update(mongo,"beveeladmin.systemParms",
list(param_name=param,customer=customer_name,rule_id=rule),
list(param_name=param,customer=customer_name,rule_id=rule,value=new_value)
)
write_mongoDB_param("targetTrainingDays","Netshoes","9999",9000)
write_mongoDB_param=function(param,customer_name,rule,new_value){
#connect with mongoDB
library(devtools)
library(rmongodb)
mongo <- mongo.create("172.31.24.104:27017",username = "",db="beveeladmin",timeout = 100L)
#update the value in mongoDB
update_status=mongo.update(mongo,"beveeladmin.systemParms",
list(param_name=param,customer=customer_name,rule_id=rule),
list(param_name=param,customer=customer_name,rule_id=rule,value=new_value)
)
mongo.disconnect(mongo)
if(!update_status){
stop)"The update has failed"
}
}
write_mongoDB_param=function(param,customer_name,rule,new_value){
#connect with mongoDB
library(devtools)
library(rmongodb)
mongo <- mongo.create("172.31.24.104:27017",username = "",db="beveeladmin",timeout = 100L)
#update the value in mongoDB
update_status=mongo.update(mongo,"beveeladmin.systemParms",
list(param_name=param,customer=customer_name,rule_id=rule),
list(param_name=param,customer=customer_name,rule_id=rule,value=new_value)
)
mongo.disconnect(mongo)
if(!update_status){
stop)"The update has failed"
}
}
write_mongoDB_param=function(param,customer_name,rule,new_value){
#connect with mongoDB
library(devtools)
library(rmongodb)
mongo <- mongo.create("172.31.24.104:27017",username = "",db="beveeladmin",timeout = 100L)
#update the value in mongoDB
update_status=mongo.update(mongo,"beveeladmin.systemParms",
list(param_name=param,customer=customer_name,rule_id=rule),
list(param_name=param,customer=customer_name,rule_id=rule,value=new_value)
)
mongo.disconnect(mongo)
if(!update_status){
stop("The update has failed")
}
}
write_mongoDB_param("targetTrainingDays","Netshoes","9999",9000)
write_mongoDB_param("targetTrainingDays","Netshoes","9999",900)
knitr::opts_chunk$set(echo = TRUE)
dataSourceSwitch='production'#'delta' only uses new data, 'base' only uses old data, 'both' use new and old data to generate recommendations
source_and_result_switch='production';evalSwitch='eval';parmFile='Netshoes.txt';type='purchase'
homeDirectory = Sys.getenv("HOME"); homeDirectory
currentDir = paste(homeDirectory, "/gitRepos/CF_and_other_analyses/R/", sep=""); currentDir
setwd(currentDir); getwd()
## Variables and functions
source('eoe_common_setup.R')
targetedTrainingDays = read_mongoDB_param("targetTrainingDays",customer,ruleId)
newTargetTrainingDays = 170
write_mongoDB_param("targetTrainingDays",customer,ruleId,newTargetedTrainingDays)
newTargetedTrainingDays = 170
write_mongoDB_param("targetTrainingDays",customer,ruleId,newTargetedTrainingDays)
library(git2r)
library(libcurl)
library(dplyr)
library(dplyr)
max_count_table_file = "/home/frank/Exploration/Sql/Netshoes_Page_Request_Analytics.csv"
max_count_table = read.csv(file=max_count_table_file,header=TRUE,stringsAsFactors = FALSE)
max_count_table$Number
View(max_count_table)
summary(max_count_table)
View(max_count_table)
max_count_table_file = "/home/frank/Exploration/Sql/Netshoes_Page_Request_Analytics.csv"
max_count_table = read.csv(file=max_count_table_file,header=TRUE,stringsAsFactors = FALSE)
max_count_table$Number
summary(max_count_table)
max_count_table_file = "/home/frank/Exploration/Sql/Netshoes_Page_Request_Analytics.csv"
max_count_table = read.csv(file=max_count_table_file,header=TRUE,stringsAsFactors = FALSE)
site_value="Netshoes"
page_type_value="PDP"
period_value="Hourly"
max_count_table_file = "/home/frank/Exploration/Sql/Netshoes_Page_Request_Analytics.csv"
max_count_table = read.csv(file=max_count_table_file,header=TRUE,stringsAsFactors = FALSE)
new_count_file= paste0("/home/frank/Exploration/Sql/",new_count_file)
new_count_file='new_max_count.txt'
max_count_table_file = "/home/frank/Exploration/Sql/Netshoes_Page_Request_Analytics.csv"
max_count_table = read.csv(file=max_count_table_file,header=TRUE,stringsAsFactors = FALSE)
new_count_file= paste0("/home/frank/Exploration/Sql/",new_count_file)
new_count = read.csv(file=new_count_file,header = FALSE,sep = "|")
colnames(new_count)=c("time","count")
target_old_count_row=max_count_table %>% filter(Site==site_value,Page_Type==page_type_value,Period==period_value)
library(dplyr)
target_old_count_row=max_count_table %>% filter(Site==site_value,Page_Type==page_type_value,Period==period_value)
View(target_old_count_row)
?write.csv()
View(new_count)
summary(new_count)
View(max_count_table)
max_count_table_file = "/home/frank/Exploration/Sql/Netshoes_Page_Request_Analytics.csv"
max_count_table = read.csv(file=max_count_table_file,header=TRUE,stringsAsFactors = FALSE)
View(new_count)
View(max_count_table)
new_count_file= paste0("/home/frank/Exploration/Sql/",new_count_file)
new_count = read.csv(file=new_count_file,header = FALSE,sep = "|")
new_count = read.csv(file=new_count_file,header = FALSE,sep = "|")
new_count_file
new_count_file="new_max_count.txt"
new_count_file= paste0("/home/frank/Exploration/Sql/",new_count_file)
new_count = read.csv(file=new_count_file,header = FALSE,sep = "|")
colnames(new_count)=c("time","count")
target_old_count_row=max_count_table %>% filter(Site==site_value,Page_Type==page_type_value,Period==period_value)
View(target_old_count_row)
max_count_table_file = "/home/frank/Exploration/Sql/Netshoes_Page_Request_Analytics.csv"
max_count_table = read.csv(file=max_count_table_file,header=TRUE,stringsAsFactors = FALSE)
new_count = read.csv(file=new_count_file,header = FALSE,sep = "|")
colnames(new_count)=c("time","count")
View(target_old_count_row)
target_old_count_row=max_count_table %>% filter(Site==site_value,Page_Type==page_type_value,Period==period_value)
View(target_old_count_row)
max_count_table$Count[max_count_table$Count==target_old_count_row$Count]=new_count$count
max_count_table$Max_Time[max_count_table$Count==target_old_count_row$Count]=toString(new_count$time)
max_count_table$Max_Time[max_count_table$Count==target_old_count_row$Count]
max_count_table$Count[max_count_table$Count==target_old_count_row$Count]
max_count_table$Count==target_old_count_row$Count
summary(max_count_table)
max_count_table$Max_Time
max_count_table$Count
max_count_table$Count==target_old_count_row$Count
max_count_table$Count==target_old_count_row$Count[1]
max_count_table$Count==target_old_count_row$Count[0]
target_old_count_row$Count
target_old_count_row$Count[1]
max_count_table$Count==new_count$count
max_count_table$Max_Time
max_count_table$Max_Time==target_old_count_row$Max_Time
max_count_table_file = "/home/frank/Exploration/Sql/Netshoes_Page_Request_Analytics.csv"
max_count_table = read.csv(file=max_count_table_file,header=TRUE,stringsAsFactors = FALSE)
target_old_count_row=max_count_table %>% filter(Site==site_value,Page_Type==page_type_value,Period==period_value)
old_count=target_old_count_row$Count
old_count=target_old_count_row$Count
max_count_table$Count[max_count_table$Count==old_count]=new_count$count
max_count_table$Max_Time[max_count_table$Count==new_count$count]=toString(new_count$time)
write.csv(max_count_table,file=max_count_table_file,row.names = FALSE)
library(dplyr)
getwd()
library(dplyr)
setwd("~/Exploration/traffic_count/")
getwd()
max_count_table_file = paste0(getwd(),"/Netshoes_Page_Request_Analytics.csv")
new_count_file= paste0(getwd(),'/',new_count_file)
max_count_table = read.csv(file=max_count_table_file,header=TRUE,stringsAsFactors = FALSE)
View(max_count_table)
